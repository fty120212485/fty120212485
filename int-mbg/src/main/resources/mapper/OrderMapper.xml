<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yung.interview.mapper.OrderMapper">
  <resultMap id="BaseResultMap" type="com.yung.interview.model.Order">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_sn" jdbcType="VARCHAR" property="orderSn" />
    <result column="member_id" jdbcType="INTEGER" property="memberId" />
    <result column="pay_amount" jdbcType="DECIMAL" property="payAmount" />
    <result column="total_amout" jdbcType="DECIMAL" property="totalAmout" />
    <result column="pay_type" jdbcType="TINYINT" property="payType" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="consignee_id" jdbcType="INTEGER" property="consigneeId" />
    <result column="logistics_company" jdbcType="VARCHAR" property="logisticsCompany" />
    <result column="logistics_sn" jdbcType="VARCHAR" property="logisticsSn" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="delivery_time" jdbcType="TIMESTAMP" property="deliveryTime" />
    <result column="comfirm_taime" jdbcType="TIMESTAMP" property="comfirmTaime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_sn, member_id, pay_amount, total_amout, pay_type, status, consignee_id, 
    logistics_company, logistics_sn, remark, pay_time, delivery_time, comfirm_taime, 
    create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.yung.interview.model.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yung.interview.model.OrderExample">
    delete from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yung.interview.model.Order">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into order (order_sn, member_id, pay_amount, 
      total_amout, pay_type, status, 
      consignee_id, logistics_company, logistics_sn, 
      remark, pay_time, delivery_time, 
      comfirm_taime, create_time, update_time
      )
    values (#{orderSn,jdbcType=VARCHAR}, #{memberId,jdbcType=INTEGER}, #{payAmount,jdbcType=DECIMAL}, 
      #{totalAmout,jdbcType=DECIMAL}, #{payType,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, 
      #{consigneeId,jdbcType=INTEGER}, #{logisticsCompany,jdbcType=VARCHAR}, #{logisticsSn,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{payTime,jdbcType=TIMESTAMP}, #{deliveryTime,jdbcType=TIMESTAMP}, 
      #{comfirmTaime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yung.interview.model.Order">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderSn != null">
        order_sn,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="payAmount != null">
        pay_amount,
      </if>
      <if test="totalAmout != null">
        total_amout,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="consigneeId != null">
        consignee_id,
      </if>
      <if test="logisticsCompany != null">
        logistics_company,
      </if>
      <if test="logisticsSn != null">
        logistics_sn,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="deliveryTime != null">
        delivery_time,
      </if>
      <if test="comfirmTaime != null">
        comfirm_taime,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderSn != null">
        #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="payAmount != null">
        #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalAmout != null">
        #{totalAmout,jdbcType=DECIMAL},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="consigneeId != null">
        #{consigneeId,jdbcType=INTEGER},
      </if>
      <if test="logisticsCompany != null">
        #{logisticsCompany,jdbcType=VARCHAR},
      </if>
      <if test="logisticsSn != null">
        #{logisticsSn,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deliveryTime != null">
        #{deliveryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="comfirmTaime != null">
        #{comfirmTaime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yung.interview.model.OrderExample" resultType="java.lang.Long">
    select count(*) from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderSn != null">
        order_sn = #{record.orderSn,jdbcType=VARCHAR},
      </if>
      <if test="record.memberId != null">
        member_id = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.payAmount != null">
        pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.totalAmout != null">
        total_amout = #{record.totalAmout,jdbcType=DECIMAL},
      </if>
      <if test="record.payType != null">
        pay_type = #{record.payType,jdbcType=TINYINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.consigneeId != null">
        consignee_id = #{record.consigneeId,jdbcType=INTEGER},
      </if>
      <if test="record.logisticsCompany != null">
        logistics_company = #{record.logisticsCompany,jdbcType=VARCHAR},
      </if>
      <if test="record.logisticsSn != null">
        logistics_sn = #{record.logisticsSn,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deliveryTime != null">
        delivery_time = #{record.deliveryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.comfirmTaime != null">
        comfirm_taime = #{record.comfirmTaime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order
    set id = #{record.id,jdbcType=INTEGER},
      order_sn = #{record.orderSn,jdbcType=VARCHAR},
      member_id = #{record.memberId,jdbcType=INTEGER},
      pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      total_amout = #{record.totalAmout,jdbcType=DECIMAL},
      pay_type = #{record.payType,jdbcType=TINYINT},
      status = #{record.status,jdbcType=TINYINT},
      consignee_id = #{record.consigneeId,jdbcType=INTEGER},
      logistics_company = #{record.logisticsCompany,jdbcType=VARCHAR},
      logistics_sn = #{record.logisticsSn,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      delivery_time = #{record.deliveryTime,jdbcType=TIMESTAMP},
      comfirm_taime = #{record.comfirmTaime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yung.interview.model.Order">
    update order
    <set>
      <if test="orderSn != null">
        order_sn = #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="payAmount != null">
        pay_amount = #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalAmout != null">
        total_amout = #{totalAmout,jdbcType=DECIMAL},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="consigneeId != null">
        consignee_id = #{consigneeId,jdbcType=INTEGER},
      </if>
      <if test="logisticsCompany != null">
        logistics_company = #{logisticsCompany,jdbcType=VARCHAR},
      </if>
      <if test="logisticsSn != null">
        logistics_sn = #{logisticsSn,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deliveryTime != null">
        delivery_time = #{deliveryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="comfirmTaime != null">
        comfirm_taime = #{comfirmTaime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yung.interview.model.Order">
    update order
    set order_sn = #{orderSn,jdbcType=VARCHAR},
      member_id = #{memberId,jdbcType=INTEGER},
      pay_amount = #{payAmount,jdbcType=DECIMAL},
      total_amout = #{totalAmout,jdbcType=DECIMAL},
      pay_type = #{payType,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      consignee_id = #{consigneeId,jdbcType=INTEGER},
      logistics_company = #{logisticsCompany,jdbcType=VARCHAR},
      logistics_sn = #{logisticsSn,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      delivery_time = #{deliveryTime,jdbcType=TIMESTAMP},
      comfirm_taime = #{comfirmTaime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>